#In this SQL code, I'm querying a database that's holding multiple tables in it to answer questions about the data.

#1. Show customers (full name, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, Customerid, Country FROM chinook.customers
WHERE Country != "USA";

#2. Which customers are from Brazil?
SELECT FirstName, LastName FROM chinook.customers
WHERE Country = "Brazil";

#3. Find invoices of the customers that are from Brazil. The resulting table should show customer's full name, invoice ID, invoice date, and billing country.
SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM chinook.customers c 
LEFT JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId
WHERE c.Country = "Brazil";

#4. Show the employees who are Sales Support Agents.
SELECT * FROM chinook.employees
WHERE Title = "Sales Support Agent";

#5. Find unique/distinct list of billing countries from invoice table.
SELECT DISTINCT BillingCountry FROM chinook.invoices;

#6. Provide query that shows the invoices associated with each sales agent. Resulting table should include sale agent's full name.
SELECT e.FirstName, e.LastName, i.InvoiceId FROM chinook.Employees e
JOIN chinook.customers c ON c.SupportRepId = e.EmployeeId
JOIN chinook.invoices i ON i.CustomerId = c.CustomerId;

#7. Show invoice total, customer name, country and sales agent name for all invoices and customers.
SELECT i.Total, c.FirstName, c.LastName, c.Country, e.FirstName, e.LastName FROM chinook.employees e
JOIN chinook.customers c ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i ON i.CustomerId = c.CustomerId;

#8. How many invoices were there in 2009?
SELECT COUNT(i.InvoiceId) FROM chinook.invoices i
WHERE i.InvoiceDate LIKE '2009%';

#9. What were the total sales for 2009?
SELECT SUM(i.Total) FROM chinook.invoices i 
WHERE i.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

#10. Write query that includes purchased track name with each invoice line ID.
SELECT t.name, i.InvoiceLineId FROM chinook.invoice_items i 
JOIN chinook.tracks t ON i.TrackId = t.TrackId;

#11. Write query that includes purchased track name AND artist name with each invoice line ID.
SELECT ar.name AS Artist, t.name AS Track, i.InvoiceLineId FROM chinook.invoice_items i 
JOIN chinook.tracks t ON i.TrackId = t.TrackID
JOIN chinook.albums al ON al.AlbumID = t.AlbumId
JOIN chinook.artists ar ON ar.ArtistId = al.ArtistId;

#12. Provide query that shows all track names, album name, media type and genre.
SELECT t.Name AS Track, a.Title AS Album, m.name AS "Media Type", g.name AS "Genre" FROM chinook.tracks t 
JOIN chinook.albums a ON a.AlbumId = t.AlbumId
JOIN chinook.media_types m ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.genres g ON g.GenreId = t.GenreId;

#13. Show the total sales made by each sales agent.
Select ROUND(SUM(i.Total), 2), e.FirstName, e.LastName FROM chinook.employees e 
JOIN chinook.invoices i ON c.CustomerId = i.CustomerId
JOIN chinook.customers c ON c.SupportRepId = e.EmployeeId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.EmployeeId;

#14. Which sales agent made the most in sales in 2009?
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) AS 'Total Sales' FROM chinook.employees e
JOIN chinook.customers c ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i ON i.CustomerId = c.CustomerId
WHERE i.InvoiceDate LIKE '2009%'
AND e.Title = 'Sales Support Agent'
GROUP BY e.FirstName
ORDER BY ROUND(SUM(i.Total), 2) DESC LIMIT 1; 

#15. Write query that shows all the tracks on one specific album: "For Those About To Rock We Salute You".
SELECT t.Name AS 'Track Name', a.Title AS 'Album' FROM chinook.tracks t
JOIN chinook.albums a ON a.AlbumId = t.AlbumId
WHERE a.Title = 'For Those About To Rock We Salute You';

#16. Show how many tracks each artists has.
SELECT COUNT(t.TrackId), a.Name FROM chinook.tracks t 
JOIN chinook.artists a ON a.ArtistId = al.ArtistId
JOIN chinook.albums al ON al.AlbumId = t.AlbumId
GROUP BY a.Name

#17. Show all the tracks by the artist whose ID is '1'.
SELECT * FROM chinook.tracks t
JOIN chinook.albums a ON a.ArtistId = ar.ArtistId
JOIN chinook.artists ar ON a.AlbumId = t.AlbumID
WHERE ar.ArtistId = '1';

#18. Select track names that have an above average unit price.
SELECT Name, UnitPrice FROM chinook.tracks
WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM chinook.tracks);
